<?xml version="1.0"?>
<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="http://www.skosknowledge.com/ontologies/skos_knowledge.owl"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     ontologyIRI="http://www.skosknowledge.com/ontologies/skos_knowledge.owl">
    <Prefix name="" IRI="http://www.skosknowledge.com/ontologies/skos_knowledge.owl#"/>
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="xml" IRI="http://www.w3.org/XML/1998/namespace"/>
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Prefix name="term" IRI="http://purl.org/dc/terms/"/>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="term:description"/>
        <Literal xml:lang="en">An RDF vocabulary for describing the basic structure and content of concept schemes such as thesauri, classification schemes, subject heading lists, taxonomies, &apos;folksonomies&apos;, other types of controlled vocabulary, and also concept schemes embedded in glossaries and terminologies.</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="term:title"/>
        <Literal xml:lang="en">SKOS Vocabulary</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="rdfs:seeAlso"/>
        <IRI>http://www.w3.org/TR/skos-reference</IRI>
    </Annotation>
    <Declaration>
        <Class IRI="#ArithmeticOperator"/>
    </Declaration>
    <Declaration>
        <Class IRI="#CProgram"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Collection"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Comment"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Computer"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Concept"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptAddNewConcept"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptAlgorithm"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptArithmetic_Operator"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptAssignment"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptC_Program"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptC_Programming_Language"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptCode"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptComment"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptCompilation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptComputer"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptConstant"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptDeclaration"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptDirective"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptDouble"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptExpression"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptFloat"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptFunction"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptFunction_Call"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptFunction_Heading"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptIdentifier"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptInitialisation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptInput_Output"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptInstruction"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptInteger"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptLifetime"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptMachine_Code"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptMacro"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptMemory"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptNewConcept2"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptOperator"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptParameter"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptProcedure"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptProgram"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptProgramming"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptProgramming_Language"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptProgramming_Strategy"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptRelational_Operator"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptReturn_value"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptScope"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptSelection_Statement"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptStatement"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptTest"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptType"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ConceptVariable"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Conceptae"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Conceptx"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Constant"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Directive"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Function"/>
    </Declaration>
    <Declaration>
        <Class IRI="#FunctionLifetime"/>
    </Declaration>
    <Declaration>
        <Class IRI="#FunctionParameter"/>
    </Declaration>
    <Declaration>
        <Class IRI="#FunctionScope"/>
    </Declaration>
    <Declaration>
        <Class IRI="#FunctionType"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IO"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Operator"/>
    </Declaration>
    <Declaration>
        <Class IRI="#OrderedCollection"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Program"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Programming"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ProgrammingLanguage"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ProgrammingStrategy"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RelationalOperator"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SchemeDouble"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SchemeFloat"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SchemeInteger"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Schemes"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SchemesType"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SelectionStatement"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Statement"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Variable"/>
    </Declaration>
    <Declaration>
        <Class IRI="#VariableAssignment"/>
    </Declaration>
    <Declaration>
        <Class IRI="#VariableDeclaration"/>
    </Declaration>
    <Declaration>
        <Class IRI="#VariableInitialisation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#VariableMemory"/>
    </Declaration>
    <Declaration>
        <Class IRI="#VariableType"/>
    </Declaration>
    <Declaration>
        <Class IRI="#VariableValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#1511"/>
    </Declaration>
    <Declaration>
        <Class abbreviatedIRI="rdf:List"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#broadMatch"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#broader"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#broaderTransitive"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#closeMatch"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#exactMatch"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasTopConcept"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#inScheme"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#mappingRelation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#member"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#memberList"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#narrowMatch"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#narrower"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#narrowerTransitive"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#related"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#relatedMatch"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#semanticRelation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#testRelation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#topConceptOf"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#notation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#2"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty abbreviatedIRI="term:description"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty abbreviatedIRI="term:title"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#LOId"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#altLabel"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#changeNote"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#csoConcept"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#definition"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#documentId"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#editorialNote"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#example"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#hiddenLabel"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#historyNote"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#note"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#prefLabel"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#requires"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="#scopeNote"/>
    </Declaration>
    <EquivalentClasses>
        <Class IRI="#FunctionType"/>
        <Class IRI="#SchemesType"/>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#SchemesType"/>
        <Class IRI="#VariableType"/>
    </EquivalentClasses>
    <SubClassOf>
        <Class IRI="#ArithmeticOperator"/>
        <Class IRI="#Operator"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ArithmeticOperator"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptArithmetic_Operator"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#CProgram"/>
        <Class IRI="#ProgrammingLanguage"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#CProgram"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptC_Program"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Comment"/>
        <Class IRI="#Program"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Comment"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptComment"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Computer"/>
        <Class IRI="#1511"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Computer"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptComputer"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptAddNewConcept"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptAlgorithm"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptArithmetic_Operator"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptArithmetic_Operator"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptOperator"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptAssignment"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptAssignment"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptC_Program"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptC_Program"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#related"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptC_Programming_Language"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptC_Programming_Language"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptC_Program"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptCode"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptCode"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptComment"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptComment"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptCompilation"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptCompilation"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptCompilation"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#narrower"/>
            <Class IRI="#ConceptMachine_Code"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptComputer"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptComputer"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#narrower"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptConstant"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptConstant"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptDeclaration"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptDeclaration"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptVariable"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptDirective"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptDirective"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptDouble"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptDouble"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptType"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptExpression"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptExpression"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptFloat"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptFloat"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptType"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptFunction"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptFunction"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptFunction_Call"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptFunction_Call"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptFunction"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptFunction_Heading"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptFunction_Heading"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptFunction"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptIdentifier"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptIdentifier"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptVariable"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptInitialisation"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptInitialisation"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptVariable"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptInput_Output"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptInput_Output"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptInstruction"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptInstruction"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#related"/>
            <Class IRI="#ConceptMachine_Code"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptInteger"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptInteger"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptType"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptLifetime"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptLifetime"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptFunction"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptMachine_Code"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptMachine_Code"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#related"/>
            <Class IRI="#ConceptInstruction"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptMacro"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptMacro"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptMemory"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptMemory"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptNewConcept2"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptOperator"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptOperator"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptOperator"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#exactMatch"/>
            <Class IRI="#ConceptAddNewConcept"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptParameter"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptParameter"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptFunction"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProcedure"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProcedure"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProgram"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProgram"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broaderTransitive"/>
            <Class IRI="#ConceptComputer"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProgram"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#narrower"/>
            <Class IRI="#ConceptAlgorithm"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProgram"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#narrower"/>
            <Class IRI="#ConceptInstruction"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProgramming"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProgramming"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProgramming_Language"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProgramming_Language"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgramming"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProgramming_Strategy"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptProgramming_Strategy"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgramming"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptRelational_Operator"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptRelational_Operator"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptOperator"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptReturn_value"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptReturn_value"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptFunction"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptScope"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptScope"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptFunction"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptSelection_Statement"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptSelection_Statement"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptStatement"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptStatement"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptTest"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptType"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptType"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptVariable"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptVariable"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ConceptVariable"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#broader"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Conceptae"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Conceptx"/>
        <Class IRI="#Concept"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Constant"/>
        <Class IRI="#Program"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Constant"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptConstant"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Directive"/>
        <Class IRI="#Program"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Directive"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptDirective"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Function"/>
        <Class IRI="#Program"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Function"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptFunction"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FunctionLifetime"/>
        <Class IRI="#Function"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FunctionLifetime"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptLifetime"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FunctionParameter"/>
        <Class IRI="#Function"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FunctionParameter"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptParameter"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FunctionScope"/>
        <Class IRI="#Function"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FunctionScope"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptScope"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FunctionType"/>
        <Class IRI="#Function"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#FunctionType"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptType"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IO"/>
        <Class IRI="#Program"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IO"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptInput_Output"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Operator"/>
        <Class IRI="#Program"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Operator"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptOperator"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#OrderedCollection"/>
        <Class IRI="#Collection"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Program"/>
        <Class IRI="#Computer"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Program"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptProgram"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Programming"/>
        <Class IRI="#Program"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Programming"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptProgramming"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ProgrammingLanguage"/>
        <Class IRI="#Programming"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ProgrammingStrategy"/>
        <Class IRI="#Programming"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ProgrammingStrategy"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptProgramming_Strategy"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RelationalOperator"/>
        <Class IRI="#Operator"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RelationalOperator"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptRelational_Operator"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SchemeDouble"/>
        <Class IRI="#SchemesType"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SchemeDouble"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptDouble"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SchemeFloat"/>
        <Class IRI="#SchemesType"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SchemeInteger"/>
        <Class IRI="#SchemesType"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SchemeInteger"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptInteger"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Schemes"/>
        <Class IRI="#FunctionType"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SchemesType"/>
        <Class IRI="#Schemes"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SchemesType"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasTopConcept"/>
            <Class IRI="#ConceptType"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SchemesType"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptFloat"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SelectionStatement"/>
        <Class IRI="#Statement"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SelectionStatement"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptSelection_Statement"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Statement"/>
        <Class IRI="#Program"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Statement"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptStatement"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Variable"/>
        <Class IRI="#Program"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Variable"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptVariable"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VariableAssignment"/>
        <Class IRI="#Variable"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VariableAssignment"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptAssignment"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VariableDeclaration"/>
        <Class IRI="#Variable"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VariableDeclaration"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptDeclaration"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VariableInitialisation"/>
        <Class IRI="#Variable"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VariableInitialisation"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptInitialisation"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VariableMemory"/>
        <Class IRI="#Variable"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VariableMemory"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptMemory"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VariableType"/>
        <Class IRI="#Variable"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VariableType"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#member"/>
            <Class IRI="#ConceptType"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VariableValue"/>
        <Class IRI="#Variable"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#1511"/>
        <Class IRI="#Collection"/>
    </SubClassOf>
    <DisjointClasses>
        <Class IRI="#SchemeDouble"/>
        <Class IRI="#SchemeFloat"/>
        <Class IRI="#SchemeInteger"/>
    </DisjointClasses>
    <ClassAssertion>
        <Class IRI="#ConceptC_Program"/>
        <NamedIndividual IRI="#1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#ConceptType"/>
        <NamedIndividual IRI="#2"/>
    </ClassAssertion>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#broadMatch"/>
        <ObjectProperty IRI="#broader"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#broadMatch"/>
        <ObjectProperty IRI="#mappingRelation"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#broader"/>
        <ObjectProperty IRI="#broaderTransitive"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#broaderTransitive"/>
        <ObjectProperty IRI="#semanticRelation"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#closeMatch"/>
        <ObjectProperty IRI="#mappingRelation"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#exactMatch"/>
        <ObjectProperty IRI="#closeMatch"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#mappingRelation"/>
        <ObjectProperty IRI="#semanticRelation"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#narrowMatch"/>
        <ObjectProperty IRI="#mappingRelation"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#narrowMatch"/>
        <ObjectProperty IRI="#narrower"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#narrower"/>
        <ObjectProperty IRI="#narrowerTransitive"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#narrowerTransitive"/>
        <ObjectProperty IRI="#semanticRelation"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#related"/>
        <ObjectProperty IRI="#semanticRelation"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#relatedMatch"/>
        <ObjectProperty IRI="#mappingRelation"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#relatedMatch"/>
        <ObjectProperty IRI="#related"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#topConceptOf"/>
        <ObjectProperty IRI="#inScheme"/>
    </SubObjectPropertyOf>
    <InverseObjectProperties>
        <ObjectProperty IRI="#broadMatch"/>
        <ObjectProperty IRI="#narrowMatch"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#broader"/>
        <ObjectProperty IRI="#narrower"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#broaderTransitive"/>
        <ObjectProperty IRI="#narrowerTransitive"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#hasTopConcept"/>
        <ObjectProperty IRI="#topConceptOf"/>
    </InverseObjectProperties>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#memberList"/>
    </FunctionalObjectProperty>
    <SymmetricObjectProperty>
        <ObjectProperty IRI="#closeMatch"/>
    </SymmetricObjectProperty>
    <SymmetricObjectProperty>
        <ObjectProperty IRI="#exactMatch"/>
    </SymmetricObjectProperty>
    <SymmetricObjectProperty>
        <ObjectProperty IRI="#related"/>
    </SymmetricObjectProperty>
    <SymmetricObjectProperty>
        <ObjectProperty IRI="#relatedMatch"/>
    </SymmetricObjectProperty>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#broaderTransitive"/>
    </TransitiveObjectProperty>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#exactMatch"/>
    </TransitiveObjectProperty>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#narrowerTransitive"/>
    </TransitiveObjectProperty>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasTopConcept"/>
        <Class IRI="#Schemes"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#member"/>
        <Class IRI="#Collection"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#memberList"/>
        <Class IRI="#OrderedCollection"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#semanticRelation"/>
        <Class IRI="#Concept"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#topConceptOf"/>
        <Class IRI="#Concept"/>
    </ObjectPropertyDomain>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasTopConcept"/>
        <Class IRI="#Concept"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#inScheme"/>
        <Class IRI="#Schemes"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#member"/>
        <ObjectUnionOf>
            <Class IRI="#Collection"/>
            <Class IRI="#Concept"/>
        </ObjectUnionOf>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#memberList"/>
        <Class abbreviatedIRI="rdf:List"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#semanticRelation"/>
        <Class IRI="#Concept"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#topConceptOf"/>
        <Class IRI="#Schemes"/>
    </ObjectPropertyRange>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#Collection</IRI>
        <Literal xml:lang="en">A meaningful collection of concepts.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#scopeNote"/>
        <IRI>#Collection</IRI>
        <Literal xml:lang="en">Labelled collections can be used where you would like a set of concepts to be displayed under a &apos;node label&apos; in the hierarchy.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#Collection</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#Collection</IRI>
        <Literal xml:lang="en">Collection</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#Concept</IRI>
        <Literal xml:lang="en">An idea or notion; a unit of thought.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#Concept</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#Concept</IRI>
        <Literal xml:lang="en">Concept</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#requires"/>
        <IRI>#ConceptAddNewConcept</IRI>
        <Literal>C_Program</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#requires"/>
        <IRI>#ConceptArithmetic_Operator</IRI>
        <Literal>MathArithmetic,TestDependency</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#altLabel"/>
        <IRI>#ConceptC_Program</IRI>
        <Literal xml:lang="en">C</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#hiddenLabel"/>
        <IRI>#ConceptC_Program</IRI>
        <Literal xml:lang="en">test hidden</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ConceptC_Program</IRI>
        <Literal xml:lang="en">I LOVE COMMENTS IN MY PROGRAMS!</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ConceptC_Program</IRI>
        <Literal xml:lang="en">Test 2</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#requires"/>
        <IRI>#ConceptFunction_Call</IRI>
        <Literal>Function</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#requires"/>
        <IRI>#ConceptFunction_Heading</IRI>
        <Literal>Function</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#requires"/>
        <IRI>#ConceptNewConcept2</IRI>
        <Literal>Arithmetic_Operator,Computer</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#altLabel"/>
        <IRI>#ConceptOperator</IRI>
        <Literal>operations</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#altLabel"/>
        <IRI>#ConceptSelection_Statement</IRI>
        <Literal>Conditioned Statements</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#altLabel"/>
        <IRI>#ConceptType</IRI>
        <Literal>Datatype</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#OrderedCollection</IRI>
        <Literal xml:lang="en">An ordered collection of concepts, where both the grouping and the ordering are meaningful.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#scopeNote"/>
        <IRI>#OrderedCollection</IRI>
        <Literal xml:lang="en">Ordered collections can be used where you would like a set of concepts to be displayed in a specific order, and optionally under a &apos;node label&apos;.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#OrderedCollection</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#OrderedCollection</IRI>
        <Literal xml:lang="en">Ordered Collection</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#Schemes</IRI>
        <Literal xml:lang="en">A set of concepts, optionally including statements about semantic relationships between those concepts.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#example"/>
        <IRI>#Schemes</IRI>
        <Literal xml:lang="en">Thesauri, classification schemes, subject heading lists, taxonomies, &apos;folksonomies&apos;, and other types of controlled vocabulary are all examples of concept schemes. Concept schemes are also embedded in glossaries and terminologies.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#scopeNote"/>
        <IRI>#Schemes</IRI>
        <Literal xml:lang="en">A concept scheme may be defined to include concepts from different sources.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#Schemes</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#Schemes</IRI>
        <Literal xml:lang="en">Concept Scheme</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#altLabel</IRI>
        <Literal xml:lang="en">An alternative lexical label for a resource.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#example"/>
        <IRI>#altLabel</IRI>
        <Literal xml:lang="en">Acronyms, abbreviations, spelling variants, and irregular plural/singular forms may be included among the alternative labels for a concept. Mis-spelled terms are normally included as hidden labels (see skos:hiddenLabel).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#altLabel</IRI>
        <Literal xml:lang="en">The range of skos:altLabel is the class of RDF plain literals.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#altLabel</IRI>
        <Literal xml:lang="en">skos:prefLabel, skos:altLabel and skos:hiddenLabel are pairwise disjoint properties.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#altLabel</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#altLabel</IRI>
        <Literal xml:lang="en">alternative label</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#broadMatch</IRI>
        <Literal xml:lang="en">skos:broadMatch is used to state a hierarchical mapping link between two conceptual resources in different concept schemes.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#broadMatch</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#broadMatch</IRI>
        <Literal xml:lang="en">has broader match</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#broader</IRI>
        <Literal xml:lang="en">Relates a concept to a concept that is more general in meaning.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#scopeNote"/>
        <IRI>#broader</IRI>
        <Literal xml:lang="en">By convention, skos:broader is only used to assert an immediate (i.e. direct) hierarchical link between two conceptual resources.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#broader</IRI>
        <Literal xml:lang="en">Broader concepts are typically rendered as parents in a concept hierarchy (tree).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#broader</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#broader</IRI>
        <Literal xml:lang="en">has broader</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#broaderTransitive</IRI>
        <Literal>skos:broaderTransitive is a transitive superproperty of skos:broader.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#scopeNote"/>
        <IRI>#broaderTransitive</IRI>
        <Literal xml:lang="en">By convention, skos:broaderTransitive is not used to make assertions. Rather, the properties can be used to draw inferences about the transitive closure of the hierarchical relation, which is useful e.g. when implementing a simple query expansion algorithm in a search application.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#broaderTransitive</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#broaderTransitive</IRI>
        <Literal xml:lang="en">has broader transitive</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#changeNote</IRI>
        <Literal xml:lang="en">A note about a modification to a concept.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#changeNote</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#changeNote</IRI>
        <Literal xml:lang="en">change note</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#closeMatch</IRI>
        <Literal xml:lang="en">skos:closeMatch is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications. In order to avoid the possibility of &quot;compound errors&quot; when combining mappings across more than two concept schemes, skos:closeMatch is not declared to be a transitive property.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#closeMatch</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#closeMatch</IRI>
        <Literal xml:lang="en">has close match</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#definition</IRI>
        <Literal xml:lang="en">A statement or formal explanation of the meaning of a concept.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#definition</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#definition</IRI>
        <Literal xml:lang="en">definition</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#editorialNote</IRI>
        <Literal xml:lang="en">A note for an editor, translator or maintainer of the vocabulary.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#editorialNote</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#editorialNote</IRI>
        <Literal xml:lang="en">editorial note</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#exactMatch</IRI>
        <Literal xml:lang="en">skos:exactMatch is used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications. skos:exactMatch is a transitive property, and is a sub-property of skos:closeMatch.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#exactMatch</IRI>
        <Literal xml:lang="en">skos:exactMatch is disjoint with each of the properties skos:broadMatch and skos:relatedMatch.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#exactMatch</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#exactMatch</IRI>
        <Literal xml:lang="en">has exact match</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#example</IRI>
        <Literal xml:lang="en">An example of the use of a concept.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#example</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#example</IRI>
        <Literal xml:lang="en">example</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#hasTopConcept</IRI>
        <Literal xml:lang="en">Relates, by convention, a concept scheme to a concept which is topmost in the broader/narrower concept hierarchies for that scheme, providing an entry point to these hierarchies.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#hasTopConcept</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hasTopConcept</IRI>
        <Literal xml:lang="en">has top concept</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#hiddenLabel</IRI>
        <Literal xml:lang="en">A lexical label for a resource that should be hidden when generating visual displays of the resource, but should still be accessible to free text search operations.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hiddenLabel</IRI>
        <Literal xml:lang="en">The range of skos:hiddenLabel is the class of RDF plain literals.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hiddenLabel</IRI>
        <Literal xml:lang="en">skos:prefLabel, skos:altLabel and skos:hiddenLabel are pairwise disjoint properties.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#hiddenLabel</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hiddenLabel</IRI>
        <Literal xml:lang="en">hidden label</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#historyNote</IRI>
        <Literal xml:lang="en">A note about the past state/use/meaning of a concept.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#historyNote</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#historyNote</IRI>
        <Literal xml:lang="en">history note</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#inScheme</IRI>
        <Literal xml:lang="en">Relates a resource (for example a concept) to a concept scheme in which it is included.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#scopeNote"/>
        <IRI>#inScheme</IRI>
        <Literal xml:lang="en">A concept may be a member of more than one concept scheme.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#inScheme</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#inScheme</IRI>
        <Literal xml:lang="en">is in scheme</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#mappingRelation</IRI>
        <Literal xml:lang="en">Relates two concepts coming, by convention, from different schemes, and that have comparable meanings</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#mappingRelation</IRI>
        <Literal xml:lang="en">These concept mapping relations mirror semantic relations, and the data model defined below is similar (with the exception of skos:exactMatch) to the data model defined for semantic relations. A distinct vocabulary is provided for concept mapping relations, to provide a convenient way to differentiate links within a concept scheme from links between concept schemes. However, this pattern of usage is not a formal requirement of the SKOS data model, and relies on informal definitions of best practice.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#mappingRelation</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#mappingRelation</IRI>
        <Literal xml:lang="en">is in mapping relation with</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#member</IRI>
        <Literal xml:lang="en">Relates a collection to one of its members.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#member</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#member</IRI>
        <Literal xml:lang="en">has member</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#memberList</IRI>
        <Literal xml:lang="en">Relates an ordered collection to the RDF list containing its members.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#memberList</IRI>
        <Literal xml:lang="en">For any resource, every item in the list given as the value of the
      skos:memberList property is also a value of the skos:member property.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#memberList</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#memberList</IRI>
        <Literal xml:lang="en">has member list</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#narrowMatch</IRI>
        <Literal xml:lang="en">skos:narrowMatch is used to state a hierarchical mapping link between two conceptual resources in different concept schemes.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#narrowMatch</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#narrowMatch</IRI>
        <Literal xml:lang="en">has narrower match</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#narrower</IRI>
        <Literal xml:lang="en">Relates a concept to a concept that is more specific in meaning.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#scopeNote"/>
        <IRI>#narrower</IRI>
        <Literal xml:lang="en">By convention, skos:broader is only used to assert an immediate (i.e. direct) hierarchical link between two conceptual resources.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#narrower</IRI>
        <Literal xml:lang="en">Narrower concepts are typically rendered as children in a concept hierarchy (tree).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#narrower</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#narrower</IRI>
        <Literal xml:lang="en">has narrower</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#narrowerTransitive</IRI>
        <Literal>skos:narrowerTransitive is a transitive superproperty of skos:narrower.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#scopeNote"/>
        <IRI>#narrowerTransitive</IRI>
        <Literal xml:lang="en">By convention, skos:narrowerTransitive is not used to make assertions. Rather, the properties can be used to draw inferences about the transitive closure of the hierarchical relation, which is useful e.g. when implementing a simple query expansion algorithm in a search application.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#narrowerTransitive</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#narrowerTransitive</IRI>
        <Literal xml:lang="en">has narrower transitive</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#notation</IRI>
        <Literal xml:lang="en">A notation, also known as classification code, is a string of characters such as &quot;T58.5&quot; or &quot;303.4833&quot; used to uniquely identify a concept within the scope of a given concept scheme.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#scopeNote"/>
        <IRI>#notation</IRI>
        <Literal xml:lang="en">By convention, skos:notation is used with a typed literal in the object position of the triple.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#notation</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#notation</IRI>
        <Literal xml:lang="en">notation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#note</IRI>
        <Literal xml:lang="en">A general note, for any purpose.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#scopeNote"/>
        <IRI>#note</IRI>
        <Literal xml:lang="en">This property may be used directly, or as a super-property for more specific note types.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#note</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#note</IRI>
        <Literal xml:lang="en">note</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#prefLabel</IRI>
        <Literal xml:lang="en">The preferred lexical label for a resource, in a given language.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#prefLabel</IRI>
        <Literal xml:lang="en">A resource has no more than one value of skos:prefLabel per language tag, and no more than one value of skos:prefLabel without language tag.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#prefLabel</IRI>
        <Literal xml:lang="en">The range of skos:prefLabel is the class of RDF plain literals.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#prefLabel</IRI>
        <Literal xml:lang="en">skos:prefLabel, skos:altLabel and skos:hiddenLabel are pairwise
      disjoint properties.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#prefLabel</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#prefLabel</IRI>
        <Literal xml:lang="en">preferred label</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#related</IRI>
        <Literal xml:lang="en">Relates a concept to a concept with which there is an associative semantic relationship.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#related</IRI>
        <Literal xml:lang="en">skos:related is disjoint with skos:broaderTransitive</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#related</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#related</IRI>
        <Literal xml:lang="en">has related</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#relatedMatch</IRI>
        <Literal xml:lang="en">skos:relatedMatch is used to state an associative mapping link between two conceptual resources in different concept schemes.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#relatedMatch</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#relatedMatch</IRI>
        <Literal xml:lang="en">has related match</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#scopeNote</IRI>
        <Literal xml:lang="en">A note that helps to clarify the meaning and/or the use of a concept.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#scopeNote</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#scopeNote</IRI>
        <Literal xml:lang="en">scope note</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#semanticRelation</IRI>
        <Literal xml:lang="en">Links a concept to a concept related by meaning.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#scopeNote"/>
        <IRI>#semanticRelation</IRI>
        <Literal xml:lang="en">This property should not be used directly, but as a super-property for all properties denoting a relationship of meaning between concepts.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#semanticRelation</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#semanticRelation</IRI>
        <Literal xml:lang="en">is in semantic relation with</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#definition"/>
        <IRI>#topConceptOf</IRI>
        <Literal xml:lang="en">Relates a concept to the concept scheme that it is a top level concept of.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:isDefinedBy"/>
        <IRI>#topConceptOf</IRI>
        <IRI>http://www.w3.org/2004/02/skos/core</IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#topConceptOf</IRI>
        <Literal xml:lang="en">is top concept in scheme</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#LOId"/>
        <IRI>#1</IRI>
        <Literal>1</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#1</IRI>
        <Literal>1,programming languages,linux,operating systems,education,software,software systems</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#1</IRI>
        <Literal>2,web page,learning,computer science,engineering,software,software engineering,software reengineering,mechatronics,data stream,programming languages</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#1</IRI>
        <Literal>3,email,email messages,comp,computer systems,turing machines</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#1</IRI>
        <Literal>4,text document,programming languages,lan,c programs,textual data</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#1</IRI>
        <Literal>5,c programs,programming languages,concurrent program,combinatorial problems,combinatorial optimization</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#1</IRI>
        <Literal>6,c programs,sms messages,concurrent program,combinatorial problems,combinatorial optimization</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#1</IRI>
        <Literal>LO1Week1</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#LOId"/>
        <IRI>#2</IRI>
        <Literal>2</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>10,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>11,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>12,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>13,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>14,social sciences,computer science,engineering,system requirements,quality requirements,functional requirement,education,computer science education,applied mathematics,engineering design</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>15,social sciences,computer science,engineering,education,computer science education,applied mathematics,engineering design</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>16,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>17,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>18,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>19,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>20,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>7,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>8,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="#csoConcept"/>
        <IRI>#2</IRI>
        <Literal>9,social sciences,computer science,engineering,education,computer science education</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#2</IRI>
        <Literal>LOWeek2</Literal>
    </AnnotationAssertion>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#LOId"/>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
    </SubAnnotationPropertyOf>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#altLabel"/>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
    </SubAnnotationPropertyOf>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#changeNote"/>
        <AnnotationProperty IRI="#note"/>
    </SubAnnotationPropertyOf>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#csoConcept"/>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
    </SubAnnotationPropertyOf>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#definition"/>
        <AnnotationProperty IRI="#note"/>
    </SubAnnotationPropertyOf>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#documentId"/>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
    </SubAnnotationPropertyOf>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#editorialNote"/>
        <AnnotationProperty IRI="#note"/>
    </SubAnnotationPropertyOf>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#example"/>
        <AnnotationProperty IRI="#note"/>
    </SubAnnotationPropertyOf>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#hiddenLabel"/>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
    </SubAnnotationPropertyOf>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#historyNote"/>
        <AnnotationProperty IRI="#note"/>
    </SubAnnotationPropertyOf>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#prefLabel"/>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
    </SubAnnotationPropertyOf>
    <SubAnnotationPropertyOf>
        <AnnotationProperty IRI="#scopeNote"/>
        <AnnotationProperty IRI="#note"/>
    </SubAnnotationPropertyOf>
</Ontology>



<!-- Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi -->

